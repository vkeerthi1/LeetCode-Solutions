package leedtcode.May.CW3;

/*768. Merge Strings Alternately
        Easy

        You are given two strings word1 and word2. Merge the strings by adding letters in alternating order, starting with word1. If a string is longer than the other, append the additional letters onto the end of the merged string.

        Return the merged string.



        Example 1:

        Input: word1 = "abc", word2 = "pqr"
        Output: "apbqcr"
        Explanation: The merged string will be merged as so:
        word1:  a   b   c
        word2:    p   q   r
        merged: a p b q c r

        Example 2:

        Input: word1 = "ab", word2 = "pqrs"
        Output: "apbqrs"
        Explanation: Notice that as word2 is longer, "rs" is appended to the end.
        word1:  a   b
        word2:    p   q   r   s
        merged: a p b q   r   s

        Example 3:

        Input: word1 = "abcd", word2 = "pq"
        Output: "apbqcd"
        Explanation: Notice that as word1 is longer, "cd" is appended to the end.
        word1:  a   b   c   d
        word2:    p   q
        merged: a p b q c   d

*/
public class MergeStrings {
    public static void main(String[] args) {

        // Given array arr[]
        String s = "abc", t = "pqrl";
        System.out.print("---------------"+mergeAlternately(s, t));
        System.out.print("---------------"+mergeAlternately(s, t));
    }
    public static String mergeAlternately(String w1, String w2) {
        StringBuilder s = new StringBuilder();
        for (int i = 0; i < w1.length() || i < w2.length() ; ++i) {
            if (i < w1.length())
                s.append(w1.charAt(i));
            if (i < w2.length())
                s.append(w2.charAt(i));
        }
        return s.toString();
    }
}
